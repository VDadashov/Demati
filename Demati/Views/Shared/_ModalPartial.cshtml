@model Product

@{
    var colorCount = 1;
    var sizeCount = 1;
}

<span id="productModalClose">&times;</span>
<div class="productModal__main">
    <div class="productModal__imageThumbnail">
        @foreach (ProductImage productImage in Model.ProductImages)
        {
            <div class="productModal__image">
                <img src="~/assets/images/Product/Detail/@productImage.Image" alt="@productImage.Image">
            </div>
        }
    </div>
    <div class="productModal__text">
        <div class="productModal__raiting">
            @if (Model.Reviews != null &&  Model.Reviews.Count() > 0)
            {
                int sumRatings = 0;
                foreach (var review in Model.Reviews)
                {
                    sumRatings += (int)review.Star;
                }
                int averageRating = sumRatings / Model.Reviews.Count();

                for (int i = 0; i < 5; i++)
                {
                    <span class="productModal--raiting-star">
                        <i style="color: @(i< averageRating ? "rgb(255, 164, 34)":"rgb(182, 173, 173)");" class="@(i< averageRating ? "fa-solid":"fa-regular") fa-star"></i>
                    </span>
                }
            }
            else
            {
                for (int i = 0; i < 5; i++)
                {
                    <span class="productModal--raiting-star">
                        <i class="fa-regular fa-star"></i>
                    </span>
                }
            }
            <span class="productModal--raiting-count">
                (@((Model.Reviews != null && Model.Reviews.Count() > 0) ? Model.Reviews.Count() : 0))
            </span>
        </div>
        <div class="productModal__title">
            <h2>@Model.Title</h2>
        </div>
        <div class="productModal__price">
            @if (Model.DisCountPrice > 0)
            {
                <span class="productModal--old-price">€@(Model.Price.ToString("0.00"))</span>
                <span class="productModal--new-price">€@(Model.DisCountPrice.ToString("0.00"))</span>
            }
            else
            {
                <span class="productModal--new-price">€@(Model.Price.ToString("0.00"))</span>
            }
        </div>
        <div class="productModal__vendor">
            By <span>SE Store</span>
        </div>
        <div class="productModal__info">
            @Model.Info
        </div>
        <div class="productModal__color">
            <div class="productModal__color__title">
                color : <span class="productModal__color__value"></span>
            </div>
            <div class="productModal__color__content">
                @foreach (ProductColor productColor in Model.ProductColors)
                {
                    <div data-colorId="@productColor.ColorId" class="productModal__color__box @(colorCount == 1 ? "active-color" : "")">
                        <div style="background-color: @productColor.Color?.Name.ToLower();" class="productModal__color--box">
                            <span class="productModal__color--box--hover-text">
                                <span class="productModal__color--box__text"></span>
                                <i class="fa-solid fa-caret-down"></i>
                            </span>
                        </div>
                    </div>

                    colorCount++;
                }
            </div>
        </div>
        <div class="productModal__size">
            <div class="productModal__size__title">
                Size : <span class="productModal__size__value"></span>
            </div>
            <div class="productModal__size__content">
                @foreach (ProductSize productSize in Model.ProductSizes)
                {
                    <div data-sizeId="@productSize.SizeId" class="productModal__size__box @(sizeCount == 1 ? "active-size" : "")"><span>@productSize.Size?.Name</span></div>

                    sizeCount++;
                }
            </div>
        </div>
        <div class="productModal__stock">
            @if (Model.Count > 0)
            {
                <i class="fa-regular fa-circle-check fa-beat-fade"></i>
                <span style="color: #108043;">In stock</span>
            }
            @if (Model.Count == 0)
            {
                <i style="color:#e52828;" class="fa-regular fa-circle-check fa-beat-fade"></i>
                <span style="color: #e52828;">Out of stock</span>
            }
        </div>
        <div class="productModal__add-to-card">
            <div class="productModal__count">
                <button class="productModal__qty-minus"><i class="fa-solid fa-minus"></i></button>
                <input id="productModal--count" type="text" pattern="\d{10}" required value="1">
                <button class="productModal__qty-plus"><i class="fa-regular fa-plus"></i></button>
            </div>
            <button data-id="@Model.Id" class="productModal__add-to-card__btn">
                Add To Card
            </button>
        </div>
    </div>
</div>


